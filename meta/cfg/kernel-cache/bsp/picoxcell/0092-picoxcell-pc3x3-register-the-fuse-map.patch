From bb68fddea3eec75beb54924ebb02338355c0a459 Mon Sep 17 00:00:00 2001
From: Jamie Iles <jamie@jamieiles.com>
Date: Tue, 12 Apr 2011 14:55:37 +0100
Subject: [PATCH 092/228] picoxcell/pc3x3: register the fuse map

Signed-off-by: Jamie Iles <jamie@jamieiles.com>
---
 arch/arm/mach-picoxcell/pc3x3.c |   51 +++++++++++++++++++++++++++++++++++++++
 1 files changed, 51 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-picoxcell/pc3x3.c b/arch/arm/mach-picoxcell/pc3x3.c
index a1568e2..aa66104 100644
--- a/arch/arm/mach-picoxcell/pc3x3.c
+++ b/arch/arm/mach-picoxcell/pc3x3.c
@@ -14,6 +14,7 @@
 #include <linux/io.h>
 #include <linux/irq.h>
 #include <linux/kernel.h>
+#include <linux/platform_data/picoxcell_fuse.h>
 #include <linux/platform_device.h>
 #include <linux/spinlock.h>
 #include <linux/timex.h>
@@ -561,6 +562,55 @@ static void pc3x3_add_trng(void)
 	picoxcell_add_trng(PC3X3_RNG_BASE);
 }
 
+static struct picoxcell_fuse_map pc3x3_fuse_map = {
+	.nr_fuses	= 4096,
+	.ltp_fuse	= 994,
+	.ranges		= {
+		FUSE_RANGE_PROTECTED(secure_bootstrap, 0, 127, 928, 938, 948),
+		FUSE_RANGE_PROTECTED(counter_iv, 128, 255, 929, 939, 949),
+		FUSE_RANGE_PROTECTED(key2, 256, 383, 930, 940, 950),
+		FUSE_RANGE_PROTECTED(key3, 384, 511, 931, 941, 951),
+		FUSE_RANGE_PROTECTED(key4, 512, 639, 932, 942, 952),
+		FUSE_RANGE_PROTECTED(key5, 640, 767, 933, 943, 953),
+		FUSE_RANGE_PROTECTED(die_ident, 768, 895, 934, 944, 954),
+		FUSE_RANGE_PROTECTED(partition1, 1024, 2047, 935, 945, 955),
+		FUSE_RANGE_PROTECTED(partition2, 2048, 3071, 936, 946, 956),
+		FUSE_RANGE_PROTECTED(partition3, 3072, 4095, 937, 947, 957),
+		FUSE_RANGE(secure_boot, 992, 992),
+		FUSE_RANGE(disable_tz, 993, 993),
+		FUSE_RANGE(global_ltp, 994, 994),
+		FUSE_RANGE(disable_debug, 995, 995),
+		FUSE_RANGE(disable_isc, 996, 996),
+		FUSE_RANGE(disable_jtag, 997, 997),
+		FUSE_RANGE(disable_invasive_debug, 998, 998),
+		FUSE_RANGE(disable_noninvasive_debug, 999, 999),
+		FUSE_RANGE(disable_cp15, 1000, 1000),
+		FUSE_RANGE(disable_memif_arm, 1001, 1001),
+		FUSE_RANGE(disable_nonsecure_parallel_flash, 1002, 1002),
+		FUSE_RANGE(global_otp_ltp, 1015, 1015),
+		FUSE_RANGE(otp_disable_jtag, 1016, 1016),
+		FUSE_RANGE(otp_boot_mode, 1017, 1018),
+		FUSE_RANGE(otp_robp1, 1003, 1003),
+		FUSE_RANGE(otp_robp2, 1004, 1004),
+		FUSE_RANGE(otp_robp3, 1005, 1005),
+		FUSE_RANGE(otp_robp4, 1006, 1006),
+		FUSE_RANGE(otp_ltp1, 1007, 1007),
+		FUSE_RANGE(otp_ltp2, 1008, 1008),
+		FUSE_RANGE(otp_ltp3, 1009, 1009),
+		FUSE_RANGE(otp_ltp4, 1010, 1010),
+		FUSE_RANGE(otp_disable_jtag1, 1011, 1011),
+		FUSE_RANGE(otp_disable_jtag2, 1012, 1012),
+		FUSE_RANGE(otp_disable_jtag3, 1013, 1013),
+		FUSE_RANGE(otp_disable_jtag4, 1014, 1014),
+		FUSE_RANGE_NULL,
+	},
+};
+
+static void pc3x3_add_fuse(void)
+{
+	picoxcell_add_fuse(&pc3x3_fuse_map);
+}
+
 static void __init pc3x3_init(void)
 {
 	picoxcell_mux_register(pc3x3_mux, ARRAY_SIZE(pc3x3_mux));
@@ -571,4 +621,5 @@ static void __init pc3x3_init(void)
 	pc3x3_init_bus_snoopers();
 	pc3x3_add_spaccs();
 	pc3x3_add_trng();
+	pc3x3_add_fuse();
 }
-- 
1.7.0.4

