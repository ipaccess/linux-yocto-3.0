From 2079d5822e529ff0ce2923109455205909871e1d Mon Sep 17 00:00:00 2001
From: Jamie Iles <jamie@jamieiles.com>
Date: Mon, 7 Mar 2011 15:24:28 +0000
Subject: [PATCH 007/228] picoxcell: support for PC3X2 clks and timers

This patch adds support for the clk's and timers in PC3X2 devices.
PC3X2 contains no gateable clocks so we just provide some aliases
to a fixed rate clk that has no enable/disable so that we can use
common drivers that expect a struct clk.

Signed-off-by: Jamie Iles <jamie@jamieiles.com>
---
 arch/arm/mach-picoxcell/Kconfig          |    7 +++
 arch/arm/mach-picoxcell/Makefile         |    1 +
 arch/arm/mach-picoxcell/pc3x2.c          |   87 ++++++++++++++++++++++++++++++
 arch/arm/mach-picoxcell/picoxcell_core.c |    4 ++
 arch/arm/mach-picoxcell/soc.h            |    1 +
 5 files changed, 100 insertions(+), 0 deletions(-)
 create mode 100644 arch/arm/mach-picoxcell/pc3x2.c

diff --git a/arch/arm/mach-picoxcell/Kconfig b/arch/arm/mach-picoxcell/Kconfig
index b2f393a..63867f2 100644
--- a/arch/arm/mach-picoxcell/Kconfig
+++ b/arch/arm/mach-picoxcell/Kconfig
@@ -2,6 +2,13 @@ if ARCH_PICOXCELL
 
 comment "Picochip SoC device support"
 
+config PICOXCELL_PC3X2
+	bool "Support PC3x2 devices"
+	default y
+	help
+	  Include support for picoChip PC3x2 family of devices. This
+	  includes PC302 and PC312.
+
 comment "Picochip picoXcell board selection"
 
 config BOARD_PC7302
diff --git a/arch/arm/mach-picoxcell/Makefile b/arch/arm/mach-picoxcell/Makefile
index 69a9e6b..341f540 100644
--- a/arch/arm/mach-picoxcell/Makefile
+++ b/arch/arm/mach-picoxcell/Makefile
@@ -3,3 +3,4 @@ obj-y				:= picoxcell_core.o io.o axi2cfg.o \
 				   devices.o \
 				   clk.o
 obj-$(CONFIG_BOARD_PC7302)	+= board_pc7302.o
+obj-$(CONFIG_PICOXCELL_PC3X2)	+= pc3x2.o
diff --git a/arch/arm/mach-picoxcell/pc3x2.c b/arch/arm/mach-picoxcell/pc3x2.c
new file mode 100644
index 0000000..63b6d69
--- /dev/null
+++ b/arch/arm/mach-picoxcell/pc3x2.c
@@ -0,0 +1,87 @@
+/*
+ * Copyright (c) 2010 Picochip Ltd., Jamie Iles
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * All enquiries to support@picochip.com
+ */
+#include <linux/io.h>
+#include <linux/irq.h>
+#include <linux/kernel.h>
+#include <linux/timex.h>
+
+#include <mach/clkdev.h>
+#include <mach/hardware.h>
+
+#include "picoxcell_core.h"
+#include "soc.h"
+
+FIXED_CLK(dummy,	CLOCK_TICK_RATE, -1);
+
+static struct clk_lookup pc3x2_clk_lookup[] = {
+	CLK_LOOKUP("dw_spi_mmio.0",	NULL,		&dummy_clk),
+	CLK_LOOKUP("dw_dmac.0",		NULL,		&dummy_clk),
+	CLK_LOOKUP("dw_dmac.1",		NULL,		&dummy_clk),
+	CLK_LOOKUP(NULL,		"ebi",		&dummy_clk),
+	CLK_LOOKUP(NULL,		"tzprot_ctrl",	&dummy_clk),
+	CLK_LOOKUP("picoxcell-ipsec",	NULL,		&dummy_clk),
+	CLK_LOOKUP("picoxcell-l2",	NULL,		&dummy_clk),
+	CLK_LOOKUP("picoxcell-fuse",	NULL,		&dummy_clk),
+	CLK_LOOKUP("dw_wdt",		NULL,		&dummy_clk),
+	CLK_LOOKUP("macb",		"pclk",		&dummy_clk),
+	CLK_LOOKUP("macb",		"hclk",		&dummy_clk),
+};
+
+static void pc3x2_clk_init(void)
+{
+	picoxcell_clk_add(&dummy_clk);
+	clkdev_add_table(pc3x2_clk_lookup, ARRAY_SIZE(pc3x2_clk_lookup));
+}
+
+static const struct picoxcell_timer pc3x2_timers[] = {
+	{
+		.name	= "timer0",
+		.type	= TIMER_TYPE_TIMER,
+		.base	= PICOXCELL_TIMER_BASE + 0 * TIMER_SPACING,
+		.irq	= IRQ_TIMER0,
+	},
+	{
+		.name	= "timer1",
+		.type	= TIMER_TYPE_TIMER,
+		.base	= PICOXCELL_TIMER_BASE + 1 * TIMER_SPACING,
+		.irq	= IRQ_TIMER1,
+	},
+	{
+		.name	= "timer2",
+		.type	= TIMER_TYPE_TIMER,
+		.base	= PICOXCELL_TIMER_BASE + 2 * TIMER_SPACING,
+		.irq	= IRQ_TIMER2,
+	},
+	{
+		.name	= "timer3",
+		.type	= TIMER_TYPE_TIMER,
+		.base	= PICOXCELL_TIMER_BASE + 3 * TIMER_SPACING,
+		.irq	= IRQ_TIMER3,
+	},
+	{
+		.name	= "rtc",
+		.type	= TIMER_TYPE_RTC,
+		.base	= PICOXCELL_RTCLK_BASE,
+		.irq	= IRQ_RTC,
+	},
+};
+
+static void pc3x2_init(void);
+
+struct picoxcell_soc pc3x2_soc = {
+	.init		= pc3x2_init,
+	.init_clocks	= pc3x2_clk_init,
+	.timers		= pc3x2_timers,
+	.nr_timers	= ARRAY_SIZE(pc3x2_timers),
+};
+
+static void pc3x2_init(void)
+{
+}
diff --git a/arch/arm/mach-picoxcell/picoxcell_core.c b/arch/arm/mach-picoxcell/picoxcell_core.c
index 1fe663c..2513456 100644
--- a/arch/arm/mach-picoxcell/picoxcell_core.c
+++ b/arch/arm/mach-picoxcell/picoxcell_core.c
@@ -26,6 +26,10 @@ struct picoxcell_soc *picoxcell_get_soc(void)
 		__raw_readl(IO_ADDRESS(PICOXCELL_AXI2CFG_BASE +
 				       AXI2CFG_DEVICE_ID_REG_OFFSET));
 	switch (device_id) {
+	case 0x8003:
+	case 0x8007:
+		return &pc3x2_soc;
+
 	default:
 		panic("unsupported device type %lx", device_id);
 	}
diff --git a/arch/arm/mach-picoxcell/soc.h b/arch/arm/mach-picoxcell/soc.h
index 0921cf3..395c7bd 100644
--- a/arch/arm/mach-picoxcell/soc.h
+++ b/arch/arm/mach-picoxcell/soc.h
@@ -37,6 +37,7 @@ struct picoxcell_soc {
 };
 
 extern struct picoxcell_soc *picoxcell_get_soc(void);
+extern struct picoxcell_soc pc3x2_soc;
 
 static inline int picoxcell_has_feature(enum picoxcell_features feat)
 {
-- 
1.7.0.4

