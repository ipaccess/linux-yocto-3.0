From ce7d0fb9680e32c86883a2689b394d57b5f3b7cd Mon Sep 17 00:00:00 2001
From: Jack Tan <jack.tan@windriver.com>
Date: Wed, 10 Mar 2010 15:05:39 +0800
Subject: [PATCH] mti_malta32: fix the pci resource conflicts

commit id 79896cf42f use request_resource() to replace the
insert_resource() in pci_claim_resource(). But this does
not fit the malta pci. With the new request_resource()
kernel allocate a collision io resource for PCI ethernet.
This disturb the PCI io space. One device use 0x1000 - 0x103f
and the PCI ethernet use 0x1020 - 0x103f and this is cause the
ethernet can't be accessed.

This fix supplies a fixup function to fix the ioport collision.

The old kernel log:

pci 0000:00:0a.1: BAR 4: assigned [io  0x1040-0x104f]
pci 0000:00:0a.1: BAR 4: set to [io  0x1040-0x104f] (PCI address [0x1040-0x104f]
pci 0000:00:0a.2: BAR 4: assigned [io  0x1000-0x101f]
pci 0000:00:0a.2: BAR 4: set to [io  0x1000-0x101f] (PCI address [0x1000-0x101f]
pci 0000:00:0a.3: address space collision: [io  0x1000-0x103f] already in use
pci 0000:00:0a.3: quirk: [io  0x1000-0x103f] claimed by PIIX4 ACPI
pci 0000:00:0a.3: address space collision: [io  0x1100-0x110f] already in use
pci 0000:00:0a.3: quirk: [io  0x1100-0x110f] claimed by PIIX4 SMB
pci 0000:00:0a.3: BAR 7: [io  0x1000-0x103f] has bogus alignment
pci 0000:00:0a.3: BAR 8: [io  0x1100-0x110f] has bogus alignment
pci 0000:00:0b.0: BAR 0: assigned [io  0x1020-0x103f]
pci 0000:00:0b.0: BAR 0: set to [io  0x1020-0x103f] (PCI address [0x1020-0x103f]
pci 0000:00:0b.0: BAR 1: assigned [mem 0x10111000-0x1011101f]
pci 0000:00:0b.0: BAR 1: set to [mem 0x10111000-0x1011101f] (PCI address [0x10111000-0x1011101f]
pci 0000:00:0b.0: BAR 6: assigned [mem 0x10000000-0x100fffff pref]
pci 0000:00:0c.0: BAR 0: assigned [mem 0x10110000-0x10110fff]
pci 0000:00:0c.0: BAR 0: set to [mem 0x10110000-0x10110fff] (PCI address [0x10110000-0x10110fff]
pci 0000:00:0c.0: BAR 1: assigned [mem 0x10100000-0x1010ffff]
pci 0000:00:0c.0: BAR 1: set to [mem 0x10100000-0x1010ffff] (PCI address [0x10100000-0x1010ffff]
......
pcnet32.c:v1.35 21.Apr.2008 tsbogend@alpha.franken.de
pcnet32: No access methods
......
......

Signed-off-by: Jack Tan <jack.tan@windriver.com>
---
 arch/mips/pci/fixup-malta.c |   21 +++++++++++++++++++++
 1 files changed, 21 insertions(+), 0 deletions(-)

diff --git a/arch/mips/pci/fixup-malta.c b/arch/mips/pci/fixup-malta.c
index 0f48498..d4075bb 100644
--- a/arch/mips/pci/fixup-malta.c
+++ b/arch/mips/pci/fixup-malta.c
@@ -101,3 +101,24 @@ static void __init malta_piix_func1_fixup(struct pci_dev *pdev)
 
 DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82371AB,
 	 malta_piix_func1_fixup);
+
+/* Use the io resource allocated by YAMON */
+static void __init malta_pcnet32_ioports_fixup(struct pci_dev *pdev)
+{
+	u32 check = 0, new = 0x1060;
+
+	pdev->resource[0].start = new;
+	pdev->resource[0].end = new + 0x1f;
+
+	pci_write_config_dword(pdev, 0x10, new);
+	pci_read_config_dword(pdev, 0x10, &check);
+
+	if ((new ^ check) & (u32)PCI_BASE_ADDRESS_IO_MASK)
+		printk(KERN_WARNING "pcnet32's BAR0 error updating (%#08x != %#08x)\n",
+				check, new);
+	else
+		printk(KERN_NOTICE "pcnet32's BAR0 updating is successful!\n");
+}
+
+DECLARE_PCI_FIXUP_FINAL(PCI_VENDOR_ID_AMD, PCI_DEVICE_ID_AMD_LANCE,
+	malta_pcnet32_ioports_fixup);
-- 
1.6.5.2

From c9208a1617ee9150a9a0305461a594bf545e3dfa Mon Sep 17 00:00:00 2001
From: Richard Griffiths <richard.griffiths@windriver.com>
Date: Tue, 21 Sep 2010 13:22:55 -0700
Subject: [PATCH] mousedev: mousedev patch for qemumips

The consumers of the mousedev data in MIPS uperspace assume
that the data is little endian. So if we are running on a
big endian CPU we force the output data to be little endian.

Note: this may be reverted if/when the consuming devices
add options, or options are found that can byte swap the
data in userspace. This is simply a commit of convienience
to demonstrate an issue.

Signed-off-by: Richard Griffiths <richard.griffiths@windriver.com>
Signed-off-by: Bruce Ashfield <bruce.ashfield@windriver.com>
---
 drivers/input/mousedev.c |    6 ++++++
 1 files changed, 6 insertions(+), 0 deletions(-)

diff --git a/drivers/input/mousedev.c b/drivers/input/mousedev.c
index f34b22b..e6dc33c 100644
--- a/drivers/input/mousedev.c
+++ b/drivers/input/mousedev.c
@@ -24,6 +24,7 @@
 #include <linux/device.h>
 #ifdef CONFIG_INPUT_MOUSEDEV_PSAUX
 #include <linux/miscdevice.h>
+#include <asm/byteorder.h>
 #endif
 
 MODULE_AUTHOR("Vojtech Pavlik <vojtech@ucw.cz>");
@@ -752,6 +753,11 @@ static ssize_t mousedev_read(struct file *file, char __user *buffer,
 	memcpy(data, client->ps2 + client->bufsiz - client->buffer, count);
 	client->buffer -= count;
 
+#ifdef CONFIG_CPU_BIG_ENDIAN
+	/* Force mouse data LE in userspace as consumers
+	   of the data expect it in this format */
+	cpu_to_le16p(data);
+#endif
 	spin_unlock_irq(&client->packet_lock);
 
 	if (copy_to_user(buffer, data, count))
-- 
1.6.5.2

